generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                 String               @id @default(uuid())
  images             String[]
  title              String
  subTitle           String?
  price              Float
  discount           Float?
  pair               String[]
  options            Int?
  soldOut            Boolean              @default(false)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  video              String?
  refills            String?
  sold               Int                  @default(0)
  different          String?
  howToUse           String?
  awards             String?
  carts              Cart[]
  reviews            Review[]
  steps              String?
  tips               String[]
  productDescription ProductDescription[]
}

model ProductDescription {
  id          String   @id @default(uuid())
  image       String
  title       String[]
  discription String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  productId   String
  product     Product  @relation(fields: [productId], references: [id])
}

model Blog {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  images    String[]
  tags      String[]
}

model Cart {
  id         String   @id @default(uuid())
  title      String
  price      Float
  totalPrice Float
  quantity   Int
  productId  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  image      String
  rating     Int
  product    Product  @relation(fields: [productId], references: [id])
}

model Review {
  id        String   @id @default(uuid())
  rating    Float    @default(0)
  title     String
  comment   String
  images    String[]
  imagesKey String[]
  name      String
  productId String
  userId    String
  recommend Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  like      Int      @default(0)
  dislike   Int      @default(0)
}

model User {
  id         String   @id @default(uuid())
  first_name String
  last_name  String?
  email      String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  img        String?
  Review     Review[]
  verified   Boolean  @default(false)
}
